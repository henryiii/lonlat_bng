environment:
  VisualStudioVersion: 8.0
  global:
    # This will be used as part of the zipfile name
    # TODO change the project name
    CRATE_NAME: lonlat_bng
    # TODO This is the Rust channel that build jobs will use by default but can be
    # overridden on a case by case basis down below
    RUST_VERSION: stable
  # TODO feel free to delete targets/channels you don't need
  matrix:
    # Stable channel
    - TARGET: x86_64-pc-windows-msvc
      RUST_VERSION: stable
    - TARGET: i686-pc-windows-msvc
      RUST_VERSION: nightly
    # Beta channel
    - TARGET: x86_64-pc-windows-msvc
      RUST_VERSION: beta
    # Nightly channel
    - TARGET: x86_64-pc-windows-msvc
      RUST_VERSION: nightly

# Install Rust and Cargo
install:
  - ps: >-
      If ($Env:TARGET -eq 'x86_64-pc-windows-gnu') {
        $Env:PATH += ';C:\msys64\mingw64\bin'
      } ElseIf ($Env:TARGET -eq 'i686-pc-windows-gnu') {
        $Env:PATH += ';C:\msys64\mingw32\bin'
      } ElseIf ($Env:TARGET -eq 'i686-pc-windows-msvc') {
        $Env:PATH += ';C:\msys64\mingw64\bin'
      } ElseIf ($Env:TARGET -eq 'x86_64-pc-windows-msvc') {
        $Env:PATH += ';C:\msys64\mingw64\bin'
      }
  - ps: if ($env:APPVEYOR_PULL_REQUEST_NUMBER -and $env:APPVEYOR_BUILD_NUMBER -ne ((Invoke-RestMethod `
        https://ci.appveyor.com/api/projects/$env:APPVEYOR_ACCOUNT_NAME/$env:APPVEYOR_PROJECT_SLUG/history?recordsNumber=50).builds | `
        Where-Object pullRequestId -eq $env:APPVEYOR_PULL_REQUEST_NUMBER)[0].buildNumber) { `
          throw "There are newer queued builds for this pull request, failing early." }
  - curl -sSf -o rustup-init.exe https://win.rustup.rs/
  # for i686, we want to run in 64-bit, but target 32-bit
  - ps: >-
      If ($Env:TARGET -eq 'i686-pc-windows-msvc') {
        $Env:BTARGET = 'x86_64-pc-windows-msvc'
      } Else {
        $Env:BTARGET = $Env:TARGET
      }
  - rustup-init.exe -y --default-host %BTARGET% --default-toolchain %RUST_VERSION%
  - set PATH=%PATH%;C:\Users\appveyor\.cargo\bin
  - if [%TARGET%]==[i686-pc-windows-msvc] (
      rustup target add %TARGET%
    )
  - set PATH=%PATH%;C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\bin
  - set PATH=%PATH%
  - rustc -Vv
  - cargo -V

# Equivalent to Travis' `script` phase
# TODO modify this phase as you see fit
test_script:
  - if [%APPVEYOR_REPO_TAG%]==[false] (
      cargo test --target %TARGET%
    )

artifacts:
  # Archive the generated packages in the ci.appveyor.com build report.
  - path: staging

before_deploy:
  # NEW Generate artifacts for release
  - cargo rustc --target %TARGET% --release -- -C target-feature=+crt-static
  # Cython build expects name.lib, not name.dll.lib
  - cp target\%TARGET%\release\deps\lonlat_bng.dll.lib target\%TARGET%\release\deps\lonlat_bng.lib

  # OLD build artifacts for generating a .def, needed by the MinGW Python build
  # - cargo rustc --target %TARGET% --release -- -C target-cpu=native -C link-args=-Wl,--out-implib,lonlat_bng.a
  # - dlltool -z target\%TARGET%\release\lonlat_bng.def --export-all-symbols target\%TARGET%\release\lonlat_bng.dll
  # - dir target\%TARGET%\release
  # - appveyor PushArtifact target\%TARGET%\release\lonlat_bng.def

  - dir target\%TARGET%\release
  - dir target\%TARGET%\release\deps
  - dumpbin /exports target\%TARGET%\release\lonlat_bng.dll > dumpbin_exports.txt
  - dumpbin /dependents target\%TARGET%\release\lonlat_bng.dll > dumpbin_dependents.txt
  - appveyor PushArtifact dumpbin_exports.txt
  - appveyor PushArtifact dumpbin_dependents.txt
  - ps: ci\before_deploy_windows.ps1

deploy:
  appveyor_repo_tag: true
  tag: $(APPVEYOR_REPO_TAG_NAME)
  release: $(APPVEYOR_REPO_TAG_NAME)
  description: 'Binaries'
  provider: GitHub
  auth_token:
    secure: znRnHyOxfqP+U05ChEJlAlmEx+GCGg1ELBR5yTfn7z3WiguOiBkmY9ocHfFkBLp1
  artifact: /.*\.zip/
  draft: false
  prerelease: false
  on:
    appveyor_repo_tag: true
    RUST_VERSION: nightly

cache:
  - C:\Users\appveyor\.cargo\registry
  - target

branches:
  only:
    - master
    - /v\d\.\d\.\d/

# Building is done in the test phase, so we disable Appveyor's build phase.
build: false
