dist: trusty
language: rust
services: docker
sudo: required
env:
  global:
    # This will be part of the release tarball
    # TODO change the project name
    - CRATE_NAME=lonlat_bng
    - TRAVIS_CARGO_NIGHTLY_FEATURE=""
    - DOCKER_IMAGE=quay.io/pypa/manylinux2010_x86_64


matrix:
  include:
    # STABLE
    - os: osx
      osx_image: xcode11.3
      rust: stable
      env: TARGET=x86_64-apple-darwin

    - os: linux
      rust: stable
      env: TARGET=x86_64-unknown-linux-gnu
      services: docker

    # BETA
    - os: osx
      rust: beta
      osx_image: xcode11.3
      env: TARGET=x86_64-apple-darwin

    - os: linux
      rust: beta
      env: TARGET=x86_64-unknown-linux-gnu

    # NIGHTLY
    - os: osx
      osx_image: xcode11.3
      rust: nightly
      env: TARGET=x86_64-apple-darwin

    - os: linux
      rust: nightly
      env: TARGET=x86_64-unknown-linux-gnu

before_install:
  - set -e

install:
  - bash ci/install.sh
  - source ~/.cargo/env || true

script:
  - bash ci/script.sh

after_script: set +e

before_deploy:
  - shell_session_update() { :; };
  # - curl -sSL https://rvm.io/mpapis.asc | gpg --import -
  # - rvm get stable
  # OSX deploy doesn't need a Dockerised manylinux2010 build
  - if ! [[ "$TARGET" == "x86_64-unknown-linux-gnu" ]]; then bash ci/before_deploy.sh; fi
  # Linux deploy needs Dockerised manylinux2010 artefacts
  - if [[ "$TARGET" == "x86_64-unknown-linux-gnu" ]]; then docker pull $DOCKER_IMAGE; fi
  - if [[ "$TARGET" == "x86_64-unknown-linux-gnu" ]]; then sudo docker run -e TRAVIS_TAG="$TRAVIS_TAG" --rm -v `pwd`:/io $DOCKER_IMAGE /io/ci/manylinux_rust.sh; fi

deploy:
  # TODO Regenerate this api_key for your project, this one won't work for you. Here's how:
  # - Go to 'https://github.com/settings/tokens/new' and generate a Token with only the
  # `public_repo` scope enabled
  # - Call `travis encrypt $github_token` where $github_token is the token you got in the previous
  # step and `travis` is the official Travis CI gem (see https://rubygems.org/gems/travis/)
  # - Enter the "encrypted value" below
  api_key:
        - secure: Ep/8a6Iv5N5f34wl/xNroLuLdUXU7/TNzT7ONQUw4s9uZbOd3myRQlBN7tzs5ipfUxMYk7NOC+MclL6Dk1dQUwxnp1DSBFpf3Fvu1BDH4TudFyDKH723LEw3L/5KJdYrNl8GxfdgMQIUwsox9rgy8Ejzye3ksge5VV/0VtOT52lSedZ68BXH9dDwRSVrWCoiQQFM82NO9Z2Y2RCPBULknjU8Z28OuQys9axom1lEKo7UoqyHuP5Mz++u8lHFOn/zvqgJ11zbG3IVroszjTzjQgmYB8MssjOeN407JzcwHg4W++XPen0LDVnRIN4iciQNC+2ugq84IpGGqLaOWzLtCx6SqpqANHFhWksbdhibkqdans7yf5ANzmyAlg18QNAtTPKYYKue4sDGdYQPA+AL4noY5bn25c7JOU+ILJyyhLB5UxXC1lcjFQwuOB8LayiZPvNnf6khqcWotSN5sshnwSZVJMan1Pu8fT+Mz06508TY91C4SpJ0UZhZ3Vo2W4CAoNm4qGEnlIATb+0nelAhXHTBAjvbl/D5V9otkJDUfaKGvvAlnsnU1lHDrpZmJ9ljmNJ5k7f7XoHR2wFZDRX5kdIe/XTOjSEcszsL/mchINOGnLH1kFVlgn8rCLg/l0WoyIZov/KlHA4trhkt/ZHRd9594wICPipOf6JYmhBkvt8=
  file_glob: true
  file: $CRATE_NAME-$TRAVIS_TAG-$TARGET.*
  # don't delete the artifacts from previous phases
  skip_cleanup: true
  # deploy when a new tag is pushed
  on:
    # TODO Here you can pick which targets will generate binary releases
    # In this example, there are some targets that are tested using the stable
    # and nightly channels. This condition makes sure there is only one release
    # for such targets and that's generated using the stable channel
    condition: $TRAVIS_RUST_VERSION = stable
    tags: true
  provider: releases

cache: cargo
before_cache:
  # Travis can't cache files that are not readable by "others"
  - chmod -R a+r $HOME/.cargo

branches:
  only:
    # release tags
    - /^v\d+\.\d+\.\d+.*$/
    - master

notifications:
  email:
    on_success: never
